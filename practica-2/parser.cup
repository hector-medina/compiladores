import java_cup.runtime.*;
import java.io.*;
import java.time.LocalDate;

parser code {:

    // --- COMPILERS -- UNIVERSITAT OBERTA DE CATALUNYA
    // --- Activity 2 - Syntactic analysis analysis
    //
    // STUDENT FULL NAME:
    // UOC USERNAME:
    // COURSE INSTRUCTOR:

    // Add any attributes to the parser (if you need them) here


    // Add any code that you would like to execute before the parser begins
    // Here you can initialize any variables you require
    // There is no need to modify this funcion if you don't need it!
    public static void initParser() {

    }

    // Add any code that you would like to execute after the parser ends
    // There is no need to modify this function if you don't need it!
    public static void endParser() {


    }


:}

terminal DATASET, PREPARATION, COLUMN, FEATURE, DELETE, BOOLEAN, INT, FLOAT, STRING, DATE;
terminal AND, OR, NOT, DIV, IF, THEN, ELSE, END, TRUE, FALSE, TODAY;
terminal EQ, NEQ, LT, GT, LEQ, GEQ, PLUS, MINUS, TIMES, NEG;
terminal OPEN_KEY, CLOSE_KEY, OPEN_PAREN, CLOSE_PAREN, COMMA, COLON;
terminal String  IDENT;
terminal LocalDate DATE_LITERAL;
terminal Float   FLOAT_LITERAL;
terminal Integer INT_LITERAL;
terminal String  STRING_LITERAL;

non terminal file;
non terminal dataset;
non terminal column;
non terminal type;
non terminal preparation;

file ::= 
    DATASET IDENT:id OPEN_KEY dataset CLOSE_KEY {: Eval.emitDatasetDecl(id.toString ()); :} 
    | DATASET IDENT:id OPEN_KEY dataset CLOSE_KEY {: Eval.emitDatasetDecl(id.toString ()); :} file
  ;

dataset ::= 
    | COLUMN column {: Eval.emitColumnDecl(); :} dataset
    | PREPARATION OPEN_KEY preparation {: Eval.emitPreparation(); :} CLOSE_KEY
  ;

column ::= 
    IDENT COLON type
    | IDENT COMMA column
  ;

type ::=
    BOOLEAN
    | INT
    | FLOAT 
    | STRING
    | DATE
  ;

preparation ::=

  ;
